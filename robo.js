// Generated by CoffeeScript 1.6.2
(function() {
  var Robot, addPlayer, addTile, cols, command, createMap, editor, gameLoop, map, nextTurn, player, playerPos, reset, rows, start, tileSize, turnCount, turnLength, _fn, _i, _len, _ref;

  playerPos = {
    x: 0,
    y: 0
  };

  tileSize = 50;

  turnLength = 1;

  gameLoop = null;

  turnCount = 0;

  player = null;

  editor = null;

  map = [[' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', ' ', ' ']];

  rows = map.length;

  cols = map[0].length;

  Robot = (function() {
    function Robot(row, col) {
      this.row = row;
      this.col = col;
      this.node = $(document.createElement('div'));
      this.node.addClass('robot');
      this.node.css('left', col * tileSize);
      this.node.css('top', row * tileSize);
      $('#board').append(this.node);
    }

    Robot.prototype.move = function(x, y) {
      this.node = $(".robot:first");
      this.row += y;
      this.col += x;
      if (this.row < 0) {
        this.row = 0;
      }
      if (this.row >= rows) {
        this.row = rows - 1;
      }
      if (this.col < 0) {
        this.col = 0;
      }
      if (this.col >= cols) {
        this.col = cols - 1;
      }
      this.node.css('left', this.col * tileSize);
      return this.node.css('top', this.row * tileSize);
    };

    Robot.prototype.moveLeft = function() {
      this.move(-1, 0);
      this.node.removeClass('left right up down');
      return this.node.addClass('left');
    };

    Robot.prototype.moveRight = function() {
      this.move(1, 0);
      this.node.removeClass('left right up down');
      return this.node.addClass('right');
    };

    Robot.prototype.moveUp = function() {
      this.move(0, -1);
      this.node.removeClass('left right up down');
      return this.node.addClass('up');
    };

    Robot.prototype.moveDown = function() {
      this.move(0, 1);
      this.node.removeClass('left right up down');
      return this.node.addClass('down');
    };

    Robot.prototype.set = function(x, y) {
      this.row = 0;
      this.col = 0;
      this.node.css('left', x * tileSize);
      return this.node.css('top', y * tileSize);
    };

    return Robot;

  })();

  addTile = function(row, col, type) {
    var tile;

    tile = $(document.createElement('div'));
    tile.addClass('tile').addClass(type);
    tile.width(tileSize).height(tileSize);
    tile.css('left', col * tileSize);
    tile.css('top', row * tileSize);
    return $('#board').append(tile);
  };

  addPlayer = function(row, col) {
    return player = new Robot(row, col);
  };

  createMap = function() {
    var col, i, j, row, _i, _len, _results;

    $('#board').height(tileSize * rows);
    $('#board').width(tileSize * cols);
    _results = [];
    for (i = _i = 0, _len = map.length; _i < _len; i = ++_i) {
      row = map[i];
      _results.push((function() {
        var _j, _len1, _results1;

        _results1 = [];
        for (j = _j = 0, _len1 = row.length; _j < _len1; j = ++_j) {
          col = row[j];
          _results1.push(addTile(i, j, 'dirt'));
        }
        return _results1;
      })());
    }
    return _results;
  };

  nextTurn = function() {
    var command;

    turnCount++;
    console.log("Beginning turn " + turnCount);
    command = editor.getValue();
    return eval(command);
  };

  reset = function() {
    console.log("Stopping");
    turnCount = 0;
    clearInterval(gameLoop);
    return player.set(0, 0);
  };

  start = function() {
    clearInterval(gameLoop);
    return gameLoop = setInterval(function() {
      return nextTurn();
    }, turnLength * 1000);
  };

  _ref = ['moveLeft', 'moveUp', 'moveRight', 'moveDown'];
  _fn = function(command) {
    return window[command] = function() {
      return player[command]();
    };
  };
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    command = _ref[_i];
    _fn(command);
  }

  $(function() {
    $('#resetBtn').click(function() {
      return reset();
    });
    $('#runBtn').click(function() {
      return start();
    });
    editor = CodeMirror($("#logic")[0], {
      theme: "twilight"
    });
    createMap();
    return addPlayer(0, 0);
  });

}).call(this);
